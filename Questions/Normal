1. Describe Git branching strategies (Git-flow, single branch, feature branch etc.) which you have used and what purpose does it serves.
  - Git branching strategy is a way for multiple developers to work on the same source code at the same time as opposed to having to organize all the changes before commiting which costs time. Several common types include: Gitflow (5 branches with 2 primaries being Main and Develop),  Feature branch (as the name implies, all new features are isolated in it's own branch and can be pushed to main when needed) and single branch, or more often known as trunk-based development (all development is done on the master branch).
    I have not used any type of branching before due to the nature of my previous works being either extremely confidential for github or a new project entirely and does not warrant the need to implement this yet.
    
2.	How do you revert a commit that has already been pushed and made public?
  - git reset --hard HEAD@{1}
    git push -f

3. How do you normally solve conflicts in a feature branch before merge?
  - Resolve them manually. Go through code and perform necessary fixes.

4.	“200 OK” what does it mean and show use case this HTTP Status?
  - This status code indicates that the request has been successful. A use case for this could be when testing connection to a server or another device.

5.	“201 Created” what does it mean and show use case this HTTP Status?
  - Indicates that the request is successful and something has indeed been created as a result. Can be used to test if sending a command for creating something such as a webpage has succeeded. The difference between this and 200 is that something happened rather than just a simple acknowledgement that request has been received successfully.
  
6.	“301 Moved Permanently” what does it mean and show use case this HTTP Status?
  - Used for redirecting links. This happens when the URL has been changed permanently. A use case of this is redirecting search engines to the correct new link.

7.	“400 Bad Request” what does it mean and how to identify the problem?
  - Server has denied your request due to some error. The easiest way to identify the issue is to read the error message and see where the issue is coming from. This can vary from URL issues, internet connection and DNS problems to name a few.
  
8.	“401 Unauthorized” what does it mean and how to identify the problem?
  - Unauthorized access. As the name suggests this is an issue with the user's authentication. Easiest solution is to log out and in again on whatever platform is being used.
  
9.	“403 Forbidden” what does it mean and how to identify the problem?
  - This error code means that the server has acknowledged the request but will not authorize it. Trying again later often works but to be sure, check the URL. If most solutions do not work the issue is likely server-side.
  
10.	“404 Not Found” what does it mean and how to identify the problem?
  - A well known error code. This means the server has acknowledged your request but the file you requested cannot be found. Refreshing can help as well as checking if your URL is indeed correct.

11.	“500 Internal Server Error” what does it mean and how to identify the problem?
12.	“502 Bad Gateway” what does it mean and how to identify the problem?
13.	“503 Service Unavailable” what does it mean and how to identify the problem?
14.	“504 Gateway Timeout” what does it mean and how to identify the problem?
15.	What are Linux network tools do you use for troubleshooting network problems as well as usage scenarios for each tool?
